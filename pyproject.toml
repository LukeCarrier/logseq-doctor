[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
line-length = 120
target-version = ['py38']

[tool.nitpick]
ignore_styles = [
  "py://nitpick/resources/any/commitlint",
  "py://nitpick/resources/javascript/package-json",
  "py://nitpick/resources/python/310",
  "py://nitpick/resources/python/311",
  "py://nitpick/resources/python/312",
  "py://nitpick/resources/python/39",
  "py://nitpick/resources/python/autoflake",
  "py://nitpick/resources/python/bandit",
  "py://nitpick/resources/python/black",
  "py://nitpick/resources/python/flake8",
  "py://nitpick/resources/python/github-workflow",
  "py://nitpick/resources/python/ipython",
  "py://nitpick/resources/python/isort",
  "py://nitpick/resources/python/mypy", # TODO:
  "py://nitpick/resources/python/poetry",
  "py://nitpick/resources/python/poetry-editable",
  "py://nitpick/resources/python/poetry-venv",
  "py://nitpick/resources/python/pylint",
]
# nitpick-start (auto-generated by "nitpick init --suggest" 0.35.0)
# Styles added to the Nitpick Style Library will be appended to the end of the 'style' key.
# If you don't want a style, move it to the 'ignore_styles' key.
# nitpick-end
style = [
  "py://nitpick/resources/any/codeclimate",
  "py://nitpick/resources/any/commitizen",
  "py://nitpick/resources/any/editorconfig",
  "py://nitpick/resources/any/git-legal",
  "py://nitpick/resources/any/pre-commit-hooks",
  "py://nitpick/resources/any/prettier",
  "py://nitpick/resources/markdown/markdownlint",
  "py://nitpick/resources/python/38",
  "py://nitpick/resources/python/absent",
  "py://nitpick/resources/python/pre-commit-hooks",
  "py://nitpick/resources/python/radon",
  "py://nitpick/resources/python/readthedocs",
  "py://nitpick/resources/python/sonar-python",
  "py://nitpick/resources/python/tox",
  "py://nitpick/resources/shell/bashate",
  "py://nitpick/resources/shell/shellcheck",
  "py://nitpick/resources/shell/shfmt",
  "py://nitpick/resources/toml/toml-sort",
]

[tool.poetry]
authors = ["W. Augusto Andreoli <andreoliwa@gmail.com>"]
# Complete classifier list: http://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "Operating System :: MacOS",
  "Operating System :: Unix",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Documentation",
  "Topic :: Office/Business",
  "Topic :: Scientific/Engineering",
  "Topic :: Text Processing :: Markup :: Markdown",
]
description = "Logseq Doctor: heal your Markdown files"
keywords = [
  "knowledge-base",
  "knowledge-graph",
  "logseq",
  "logseq-plugin",
  "markdown",
]
license = "MIT"
name = "logseq-doctor"
readme = "README.rst"
repository = "https://github.com/andreoliwa/logseq-doctor"
version = "0.1.1"

[tool.poetry.dependencies]
click = "*"
mistletoe = "*"
python = "^3.8"
requests = "*"
typer = {extras = ["all"], version = "*"}

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-datadir = "*"
pytest-env = "*"
pytest-testmon = "*"
pytest-watch = "*"
responses = "*"

[tool.poetry.scripts]
lsd = "logseq_doctor.cli:app"

[tool.poetry.urls]
"Changelog" = "https://logseq-doctor.readthedocs.io/en/latest/changelog.html"
"Documentation" = "https://logseq-doctor.readthedocs.io/"
"Issue Tracker" = "https://github.com/andreoliwa/logseq-doctor/issues"

[tool.ruff]
# https://beta.ruff.rs/docs/settings/#ignore
ignore = [
  "ANN101", # Missing type annotation for `self` in method
  "ANN102", # Missing type annotation for `cls` in classmethod
  "D107", # Missing docstring in `__init__`
  "D202", # No blank lines allowed after function docstring
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
  "D401", # First line of docstring should be in imperative mood
  "E402", # Module level import not at top of file
  "E501", # Line too long
  "ERA", # https://beta.ruff.rs/docs/rules/#eradicate-era
  "FBT", # https://beta.ruff.rs/docs/rules/#flake8-boolean-trap-fbt
  "FIX002", # Line contains TO DO, consider resolving the issue
  "TD002", # Missing author in TO DO; try: ? or ?
  "TD003", # Missing issue link on the line following this TO DO
]
# https://beta.ruff.rs/docs/settings/#line-length
line-length = 120
# https://beta.ruff.rs/docs/settings/#select
select = ["ALL"]
# https://beta.ruff.rs/docs/settings/#show-fixes
show-fixes = true
# https://beta.ruff.rs/docs/settings/#src
src = ["src"]
# https://beta.ruff.rs/docs/settings/#target-version
target-version = "py38"

# https://beta.ruff.rs/docs/rules/#flake8-quotes-q
[tool.ruff.flake8-quotes]
inline-quotes = "double"

# https://beta.ruff.rs/docs/rules/#mccabe-c90
[tool.ruff.mccabe]
# https://beta.ruff.rs/docs/settings/#max-complexity
max-complexity = 10

# https://beta.ruff.rs/docs/settings/#per-file-ignores
[tool.ruff.per-file-ignores]
# A001 Variable is shadowing a python builtin
# ANN https://beta.ruff.rs/docs/rules/#flake8-annotations-ann
# B008 Do not perform function call in argument defaults
# D100 Missing docstring in public module
# D103 Missing docstring in public function
# F401 imported but unused
# INP001 File `xxx.py` is part of an implicit namespace package. Add an `__init__.py`.
# PLR0913 Too many arguments to function call
# S101 use of assert detected
# S105 Possible hardcoded password
# T201 `print` found
# T203 `pprint` found
# TCH003 Move standard library import into a type-checking block
# UP006 non-pep585-annotation: it seems like a bug in Ruff because target-version is set to py38
"ci/bootstrap.py" = ["ALL"]
"docs/**" = ["ANN", "INP001", "T201", "T203"]
"docs/conf.py" = ["A001"]
"src/logseq_doctor/api.py" = ["UP006"]
"src/logseq_doctor/cli.py" = ["B008", "PLR0913", "UP006"]
"tests/**" = ["D100", "D103", "INP001", "PLR0913", "S101", "S105", "T201", "T203", "TCH003"]
"tests/data/**" = ["INP001"]

[tool.tomlsort]
all = true
ignore_case = true
in_place = true
trailing_comma_inline_array = true
